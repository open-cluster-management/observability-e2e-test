os:
  - linux

language: go
go:
  - "1.14"
addons:
  chrome: stable
services:
  - docker

# TODO: Need token for this project.
# addons:
#   sonarcloud:
#     organization: "open-cluster-management"
#     token:
#       secure: ""

branches:
  only:
    - master
    - /^release-[0-9]+\..*$/

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"

    # Component Specific
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/deploy-to-cluster.sh
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/build.sh
  #  - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-e2e-tests.sh
    - CHROMEDRIVER=81.0.4044.69
    - CRHOMIUM_VERSION=chromium-81.0.4044.113-1.fc33.x86_64
    # This is not recommended - but adding to see if this will work.
    - COMPONENT_NAME=observability-e2e-test
    - COMPONENT_VERSION=0.1.0

    #- DEPLOYED_IN_HUB=true # For sonar


stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  - make init
  - git config --global credential.helper store
  - echo "https://${GITHUB_TOKEN}:x-oauth-basic@github.com" >> ~/.git-credentials
  - git config --global url."https://$GITHUB_TOKEN@github.com/stolostron".insteadOf "https://github.com/stolostron"

jobs:
  include:
    - stage: build
      name: "Build the image and run unit tests"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        # - make copyright-check
        - make component/build
        - make component/push
      #  - make security/scans
    - stage: unit-test
      name: "Run unit tests"
      script:
        # Set the image tag differently for PRs
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        # Bootstrap the build harness, pull test image, and run unit tests.  
        - make
        #- make docker/info
        #- make docker/login
        #- make docker/pull 
        - make component/pull
        - make test-unit
        # - make sonar/go   # TODO: Need to onboard to SonarCloud
    - stage: test-e2e
      name: "Deploy the image to a cluster and run e2e tests"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make
        - make component/pull
        - make component/test/e2e
    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^master$/
      script:
        - make
        - make release-ff
  
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - make
        - make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
